AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  employees

  SAM Template for employees

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:
  EmployeesTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    Properties:
      TableName: Employees
      BillingMode: PAY_PER_REQUEST
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      SSESpecification:
        SSEEnabled: true
      AttributeDefinitions:
        - AttributeName: "employee_id"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "employee_id"
          KeyType: "HASH"
        

  ListEmployeesFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: app/
      Handler: handlers.list_employees
      Runtime: python3.7
      Role: 
        !GetAtt LambdaRole.Arn
      Events:
        RestApi:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /employees
            Method: get

  PatchEmployeeFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: app/
      Handler: handlers.patch_employee
      Runtime: python3.7
      Role: 
        !GetAtt LambdaRole.Arn
      Events:
        RestApi:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /employees/{employee_id}
            Method: patch

  GetEmployeeFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: app/
      Handler: handlers.get_employee
      Runtime: python3.7
      Role: 
        !GetAtt LambdaRole.Arn
      Events:
        RestApi:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /employees/{employee_id}
            Method: get
  
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
            - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
      Policies:
        - PolicyName: LambdaCloudwatchPermissions
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - logs:*
                - cloudwatch:*
                Effect: Allow                
                Resource: '*'
        - PolicyName: LambdaDynamoPermissions
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - dynamodb:*
                Effect: Allow   
                Resource: 
                  - !Sub 'arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/Employees'


Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  EmployeeApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/employees/"
